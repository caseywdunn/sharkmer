"""
Examine sPCR across a panel of genomes
"""
configfile: "config.yaml"

rule all:
    input:
        expand("output/{sample}.histo", sample = config["sample"]),

rule download_reads:
    params:
        reads = lambda wildcards: [x for x in config["sample"][wildcards.sample]["reads"]]
    output:
        reads_temp = directory(temp("data/{sample}_reads_downloaded")),    
        reads = "data/{sample}.fastq",
    shell:
        """
        fasterq-dump --split-files -O data/{wildcards.sample}_reads_downloaded {params.reads}
        cat data/{wildcards.sample}_reads_downloaded/*.fastq > {output.reads}
        """

rule sharkmer_pcr:
    input:
        reads = "data/{sample}.fastq"
    output:
        histo = "output/{sample}.histo",
        stats = "output/{sample}.stats",
        final_histo = "output/{sample}.final.histo",
    params:
        sample = lambda wildcards: wildcards.sample,
        arguments = lambda wildcards: config["sample"][wildcards.sample]["arguments"],
        max_reads = 2000000,
    threads: workflow.cores
    benchmark: "benchmarks/sharkmer.{sample}.benchmark.txt"
    log: "logs/sharkmer.{sample}.log"
    shell:
        """
        sharkmer -k 21 -t {threads} --max-reads {params.max_reads} -o output -s {params.sample} {params.arguments} {input.reads} > {log} 2>&1
        """
